searchState.loadedDescShard("jose", 0, "JOSE Header Builder\nJOSE Algorithm definitions based on IANA registry\nBuilder pattern implementation for JWS and JWE headers\nError types for JOSE operations\nJOSE Header structures for JWS and JWE\nRe-export commonly used types\nValidation utilities for JOSE header parameters\nJSON Web Signature and Encryption Algorithms\nCompression Algorithms for JWE\nContent Encryption Algorithms for JWE\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns true if this algorithm is suitable for JWE key …\nReturns true if this algorithm is suitable for JWS …\nReturns the recommended key size in bits for this algorithm\nReturns true if this algorithm requires additional …\nBuilder for constructing JWE headers\nBuilder for constructing JWS headers\nSet the Agreement PartyUInfo header parameter\nSet the Agreement PartyVInfo header parameter\nSet the signature algorithm\nSet the key encryption algorithm\nSet the audience header parameter (single audience)\nSet the audience header parameter (multiple audiences)\nSet the authentication tag header parameter\nSet the Base64url-Encode Payload header parameter\nBuild the JWS header, validating all parameters\nBuild the JWE header, validating all parameters\nBuild the JWS header without validation (use with caution)\nBuild the JWE header without validation (use with caution)\nSet the compression algorithm\nSet the content type header parameter\nSet the content type header parameter\nSet the critical header parameter\nSet the critical header parameter\nAdd a custom header parameter\nAdd a custom header parameter\nAdd multiple custom header parameters\nAdd multiple custom header parameters\nSet the content encryption algorithm\nSet the ephemeral public key header parameter\nReturns the argument unchanged.\nReturns the argument unchanged.\nSet the IHE SubmissionSet ID header parameter\nSet the initialization vector header parameter\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSet the issuer header parameter\nSet the JSON Web Key header parameter\nSet the JSON Web Key header parameter\nSet the JWK Set URL header parameter\nSet the JWK Set URL header parameter\nSet the key ID header parameter\nSet the key ID header parameter\nCreate a new JWS header builder with the specified …\nCreate a new JWE header builder\nSet the nonce header parameter\nSet the nonce header parameter\nSet the PASSporT extension identifier header parameter\nSet the PBES2 count header parameter\nSet the PBES2 salt input header parameter\nSet the Signature Validation Token header parameter\nSet the subject header parameter\nSet the OpenID Federation Trust Chain header parameter\nSet the type header parameter\nSet the type header parameter\nSet the URL header parameter\nSet the URL header parameter\nSet the X.509 Certificate Chain header parameter\nSet the X.509 Certificate Chain header parameter\nSet the X.509 Certificate SHA-1 Thumbprint header parameter\nSet the X.509 Certificate SHA-1 Thumbprint header parameter\nSet the X.509 Certificate SHA-256 Thumbprint header …\nSet the X.509 Certificate SHA-256 Thumbprint header …\nSet the X.509 URL header parameter\nSet the X.509 URL header parameter\nConflicting parameters\nDeserialization error\nContains the error value\nInvalid algorithm specified\nInvalid base64 encoding\nInvalid critical parameter usage\nInvalid JSON Web Key format\nInvalid header parameter value\nInvalid URL format\nErrors that can occur during JOSE header operations\nMissing required parameter\nContains the success value\nResult type alias for JOSE operations\nSerialization error\nGeneric validation error\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nJSON Web Encryption Header\nJSON Web Signature Header\nCommon header parameters shared between JWS and JWE\nAdd a custom header parameter\nAdd a custom header parameter\nAdditional custom header parameters\nAdditional custom header parameters\nAgreement PartyUInfo header parameter (RFC 7518)\nAgreement PartyVInfo header parameter (RFC 7518)\nGet the algorithm from the header\nAlgorithm header parameter\nAudience header parameter (RFC 7519)\nAuthentication Tag header parameter (RFC 7518)\nBase64url-Encode Payload header parameter (RFC 7797)\nCompression Algorithm header parameter\nContent Type header parameter\nCritical header parameter\nGet the content encryption algorithm from the header\nEncryption Algorithm header parameter\nEphemeral Public Key header parameter (RFC 7518)\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a custom header parameter\nGet a custom header parameter\nIHE SubmissionSet ID header parameter\nInitialization Vector header parameter (RFC 7518)\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nIssuer header parameter (RFC 7519)\nJSON Web Key header parameter\nJWK Set URL header parameter\nGet the key encryption algorithm from the header\nKey ID header parameter\nCreate a new JWS header with the specified algorithm\nCreate a new JWE header with the specified algorithms\nNonce header parameter (RFC 8555)\nPASSporT extension identifier header parameter (RFC 8225)\nPBES2 Count header parameter (RFC 7518)\nPBES2 Salt Input header parameter (RFC 7518)\nShared header parameters\nShared header parameters\nSignature Validation Token header parameter (RFC 9321)\nSubject header parameter (RFC 7519)\nOpenID Federation Trust Chain header parameter\nType header parameter\nURL header parameter (RFC 8555)\nX.509 Certificate Chain header parameter\nX.509 Certificate SHA-1 Thumbprint header parameter\nX.509 Certificate SHA-256 Thumbprint header parameter\nX.509 URL header parameter\nValidates algorithm compatibility with JWE\nValidates algorithm compatibility with header type\nValidates base64url encoded data\nValidates critical header parameter\nValidates that required algorithm-specific parameters are …\nValidates JWE header completeness and consistency\nValidates JWS header completeness and consistency\nValidates that a key ID contains only valid characters\nValidates conflicting parameter combinations\nValidates PBES2 count parameter\nValidates a URL string (no-op when URL validation is …\nValidates X.509 certificate chain format\nValidates X.509 thumbprint format")